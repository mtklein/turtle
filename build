#!/usr/bin/env python3

import os
import subprocess
import sys

clang = '/opt/homebrew/opt/llvm/bin/clang-14 -fcolor-diagnostics -Weverything -Wno-declaration-after-statement'
gcc   = '/opt/homebrew/bin/gcc-12            -fdiagnostics-color -Wall -Wextra'

modes = {
    'dbg':  clang + ' -fsanitize=address,integer,undefined -fno-sanitize-recover=all',
    'tsan': clang + ' -fsanitize=thread                    -fno-sanitize-recover=all',
    'opt':  clang + ' -DNDEBUG -Os',
    'lto':  clang + ' -DNDEBUG -Os -flto',
    'x86':  clang + ' -DNDEBUG -Os -arch x86_64 -momit-leaf-frame-pointer',
    'gcc':  gcc   + ' -DNDEBUG -Os',
}

srcs  = subprocess.check_output(['git','grep','-lw',       '.','**.c']).decode('utf-8').split()
mains = subprocess.check_output(['git','grep','-lw','int main','**.c']).decode('utf-8').split()

targets = [src.strip('.c') for src in srcs]
mains   = [src.strip('.c') for src in mains]
rest    = [target for target in targets if target not in mains]

with open('build.ninja', 'w') as f:
    f.write('''
builddir = out

rule compile
    command = $cc -g -Werror -MD -MF $out.d -c $in -o $out
    depfile = $out.d
    deps    = gcc

rule archive
    command = /opt/homebrew/opt/llvm/bin/llvm-ar rcs $out $in

rule link
    command = $cc $in -o $out

rule run
    command = ./$in > $out
''')
    for mode,cc in modes.items():
        for target in targets:
            f.write(
                f'build out/{mode}/{target}.o: compile {target+".c"}\n'
                f'    cc = {cc}\n'
            )

        f.write(
            f'build out/{mode}/lib.a: archive'
            f' {" ".join(os.path.join("out", mode, target+".o") for target in rest)}\n'
        )

        for target in mains:
            f.write(
                f'build out/{mode}/{target}: link out/{mode}/{target}.o out/{mode}/lib.a\n'
                f'    cc = {cc}\n'
                f'build out/{mode}/{target}.log: run out/{mode}/{target}\n'
            )

subprocess.check_call(['ninja'] + sys.argv[1:])
os.remove('build.ninja')
subprocess.check_call(['git', 'add', '-u'])
